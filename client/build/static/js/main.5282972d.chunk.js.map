{"version":3,"sources":["components/Buttons/loginButton.js","components/Buttons/signupButton.js","components/Buttons/enterButton.js","components/Buttons/modalButton.js","components/Enter/Enter.js","components/Logo/Logo.js","utils/API.js","components/Modal/ModalInner.js","components/Modal/Modal.js","pages/Login/Login.js","components/BottomNav/BottomNav.js","components/CurrentPlayer/CurrentPlayer.js","components/Gif/Gif.js","components/GifReveal/GifReveal.js","components/GiphySearch/GiphySearch.js","components/LoadingScreen/LoadingScreen.js","components/PlayerList/PlayerList.js","components/PlayerListHolder/PlayerListHolder.js","components/Profile/Profile.js","components/PromptSelect/PromptSelect.js","components/Timer/Timer.js","components/WinnerPage/WinnerPage.js","pages/Home/reloadSocket.js","pages/Home/Home.js","components/Buttons/backButton.js","pages/NoMatch/NoMatch.js","App.js","index.js"],"names":["LoginBtn","props","react_default","a","createElement","Object","assign","id","className","SignupBtn","randomword","showbutton","EnterBtn","ModalButton","onClick","Enter","type","placeholder","Logo","src","alt","width","API","getSessions","axios","get","saveSession","sessionData","post","deleteSessions","delete","checkSessionTitle","sessionTitle","checkSessionUrl","sessionUrl","addSessionMember","memberData","getCategories","getGIF","searchTerm","ModalInner","state","modal","position","top","left","transform","zIndex","background","height","this","isOpen","style","title","p1","p2","p3","modalButton","onClose","Component","Modal","isModalOpen","openModal","_this","setState","closeModal","_this2","text","Modal_ModalInner","modalTitle","modalInstructions1","modalInstructions2","modalInstructions3","Login","randomWord","randomURL","enteredWord","showResults","showError","showButton","enterKey","componentDidMount","loadSavedSessions","document","addEventListener","handleKeyDown","bind","assertThisInitialized","validateInput","enterGame","event","keyCode","console","log","generateRandomWord","word","mnGen","toLowerCase","sessionStorage","setItem","generateRandomURL","randomUrl","i","saveSessionData","printState","url","then","res","catch","err","response","data","deleteSavedSessions","loginClick","newWord","length","history","push","concat","handleInputChange","_event$target","target","name","value","defineProperty","components_Logo_Logo","signupButton_SignupBtn","toString","loginButton_LoginBtn","Enter_Enter","onChange","enterButton_EnterBtn","components_Modal_Modal","BottomNav","class","expand","children","CurrentPlayer","color","userColor","playerName","playerScore","Gif","key","user","GifReveal","gifsReturned","gifsReturnedShuffle","users","judge","judgeSocket","userSocket","socket","showJudgeInstructions","arr","sort","Math","random","ip","componentDidUpdate","selectWinner","getAttribute","winner","gif","emit","theme","category","map","components_Gif_Gif","member","GiphySearch","image_url","defaultGif","timer","gifObject","outOfTime","callGIPHY","original","confirmSelection","backgroundColor","LoadingScreen","userName","userScore","userJudge","pendingMessage","pendingPlayerHeader","members","showKeyword","showTheme","showChoices","checkMessage","checkJudge","startGame","showGifs","modalInstructions","display","String","fromCodePoint","codePointAt","keyword","PlayerList","PlayerListHolder","Profile","username","memberArray","joinClasses","setupProfile","self","profileColor","onClickIdHandler","getItem","addMember","randomNumber","floor","substring","newUsername","profileAdded","showSessionData","btns","getElementsByClassName","setAttribute","removeAttribute","PromptSelect","selectedTheme","divTarget","categoryArray","split","selectedObject","categories","icon","Timer","timeRemaining","countdown","number","setInterval","React","WinnerPage","winnerColor","reloadSocket","stateChange","socketMessageUsername","socketAddress","currentJudge","allPlayers","updateMembers","JSON","parse","playerArray","allPlayerArray","oldJudge","randomJudge","callback","model","bottomNavArray","playerList","totalPlayerList","count","score","Home","urlString","BottomNavPlayerList","BottomNavExpanded","BottomNavClasses","themeIndex","selectedCategory","remainingUsers","socketCalls","showProfile","showPending","showJudgeCategory","showGifReveal","showGiphySearch","showJudgeChoices","showWinner","showTimer","returnCategories","setUrl","configureSocket","on","userid","componentChange","message","newArray","stringify","gifArray","newGifObject","j","oldjudge","socketCount","parseInt","indexOf","spliturl","window","location","href","newurl","checkURL","io","field","expandToggle","endTimer","_this3","components_Profile_Profile","userAdded","components_LoadingScreen_LoadingScreen","components_Timer_Timer","components_BottomNav_BottomNav","components_PlayerListHolder_PlayerListHolder","components_CurrentPlayer_CurrentPlayer","player","components_PlayerList_PlayerList","prompt","components_PromptSelect_PromptSelect","index","components_GiphySearch_GiphySearch","components_GifReveal_GifReveal","components_WinnerPage_WinnerPage","BackBtn","backFunction","NoMatch","backButton","App","BrowserRouter","Switch","Route","exact","path","component","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.5282972d.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const LoginBtn = props => (\n  <span {...props} id = {props.id} className=\"btn login-btn\">\n    Join Game\n  </span>\n)\n\nexport default LoginBtn;","import React from \"react\";\n\nexport const SignupBtn = props => (\n  <div>\n    { props.randomword !== \"\" ?\n      <div id = \"roomkey\"> \n        <i className=\"fas fa-key\" id=\"key-icon\"></i>\n        <p>Your room key is</p>\n        <p id=\"random-word\">{props.randomword}</p>\n      </div>\n    : null }\n\n    { props.showbutton === \"true\" ?\n      <span {...props} id = {props.id} className=\"btn signup-btn\">\n      Create Game\n      </span>\n    : null }  \n  </div>\n)","import React from \"react\";\n\nexport const EnterBtn = props => (\n    <span {...props} id = {props.id} className=\"btn enter-btn\">\n        Join Game\n    </span>\n);","import React from \"react\";\n\nexport const ModalButton = props => (\n    <span onClick={props.onClick} className=\"modal-btn\">\n        <i className=\"fas fa-check\"></i>\n    </span>\n);\n\nexport default ModalButton;","import React from \"react\";\nimport \"./style/enter.css\";\n\nexport const Enter = props => (\n    <div>\n        <input type=\"text\"{...props} placeholder=\"Enter Key\"/>\n    </div>\n)","import React from \"react\";\n\nconst Logo = props => (\n  <div className=\"game-logo\">\n    <img src=\"https://media.giphy.com/media/swaXFSeBVHpHq/giphy.gif\" alt=\"DYEG?\" width=\"300px\" className=\"logo\"/>\n  </div>\n)\n\nexport default Logo;","import axios from \"axios\";\n\nexport default {\n    getSessions: function() {\n        return axios.get(\"/api/session\")\n    },\n    saveSession: function(sessionData) {\n        return axios.post(\"/api/session\", sessionData)\n    },\n    deleteSessions: function() {\n        return axios.delete(\"/api/session\")\n    },\n    checkSessionTitle: function(sessionTitle) {\n        return axios.get(\"/api/session/title/\" + sessionTitle);\n    },\n    checkSessionUrl: function(sessionUrl) {\n        return axios.get(\"/api/session/url\" + sessionUrl)\n    },\n    addSessionMember: function(memberData) {\n        return axios.post(\"/api/session/member\", memberData)\n    },\n    getCategories: function() {\n        return axios.get(\"/api/gif\")\n    },\n    getGIF: function(searchTerm) {\n        // Need to send to /api route to hide API Key\n        return axios.get(\"/api/giphy/?\" + searchTerm)\n    }\n}","import React, { Component } from \"react\";\nimport ModalButton from \"../Buttons/modalButton\";\nimport \"./style/modal.css\";\n\nclass ModalInner extends Component {\n\n    state = {\n        modal:  {\n            position: 'absolute',\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            zIndex:\"9999\",\n        },\n        background: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            top: '0px',\n            left: '0px',\n            zIndex: '9998',\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.props.isOpen ?  \n                    <div className=\"modal-background\" style={ this.state.background}>\n                        <div className=\"modal-style\" style={this.state.modal}>\n                            <h1 className=\"modal-title\">{this.props.title}</h1>\n                            <div className=\"modal-text\">\n                                <p className=\"modal-p\">{this.props.p1}</p>\n                                <p className=\"modal-p\">{this.props.p2}</p>\n                                <p className=\"modal-p\">{this.props.p3}</p>\n                            </div>\n                            <ModalButton onClick={this.props.onClose}></ModalButton>\n                        </div>\n                    </div>\n                : null }\n            </div>\n        )\n    }\n    \n}\n\nexport default ModalInner;","import React, { Component } from \"react\";\nimport ModalInner from \"./ModalInner\";\nimport \"./style/modal.css\";\n\nclass Modal extends Component {\n\n  state = {\n    isModalOpen: false\n  }\n\n  openModal = () => {\n    this.setState({isModalOpen: true})\n  }\n\n  closeModal = () => {\n    this.setState({isModalOpen: false})\n  }\n\n  \n  render() {\n    return (\n      <div>\n        <div className={this.props.className} id={this.props.id} onClick={this.openModal}>{this.props.text}</div>\n\n        <ModalInner isOpen={this.state.isModalOpen} onClose={() => this.closeModal()}\n          title={this.props.modalTitle} p1={this.props.modalInstructions1} p2={this.props.modalInstructions2} p3={this.props.modalInstructions3}>\n        </ModalInner>\n      </div>\n\n    )\n  }\n}\n\n\nexport default Modal;","import React, { Component } from \"react\";\nimport { SignupBtn, LoginBtn, EnterBtn } from \"../../components/Buttons\";\nimport { Enter } from \"../../components/Enter\";\nimport Logo from \"../../components/Logo/Logo\";\nimport API from \"../../utils/API\";\nimport Modal from \"../../components/Modal/Modal\";\nimport mnGen from \"mngen\";\nimport \"./style/login.css\";\n\nclass Login extends Component {\n\n    state = {\n        randomWord: \"\",\n        randomURL: \"\",\n        enteredWord: \"\",\n        showResults: false,\n        showError: false,\n        showButton: true,\n        enterKey: 13,\n    }\n\n    componentDidMount = () => {\n        this.loadSavedSessions()\n        document.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\n    }\n\n    validateInput = () => {\n        if (!this.state.enteredWord) return;\n        this.enterGame();\n    }\n\n    handleKeyDown = event => {\n        switch( event.keyCode ) {\n            case this.state.enterKey:\n                this.validateInput();\n                break;\n            default: \n                console.log( event.keyCode )\n                break;\n        }\n    };\n\n    generateRandomWord = () => {\n        this.setState({showResults: false})\n        this.setState({showError: false})\n        this.setState({showButton: false})\n\n        var word = (mnGen.word()).toLowerCase()\n\n        this.setState({randomWord: word}, function() {\n            sessionStorage.setItem(\"roomkey\", word)\n            this.generateRandomURL();\n        })\n    }\n\n    generateRandomURL = () => {\n        let randomUrl = \"\"\n\n        for (var i = 0; i < 6; i ++ ) {\n           let word =  (mnGen.word()).toLowerCase()\n           randomUrl += \"/\" + word\n        }\n\n        this.setState({randomURL: randomUrl}, function() {\n            this.saveSessionData()\n            this.printState()\n        })\n    }\n\n    saveSessionData = () => {\n        API.saveSession({\n            title: this.state.randomWord,\n            url: this.state.randomURL\n        })\n        .then(res => {\n            // const socket = openSocket(res.data.url);\n            // socket.on('connection', () => console.log(\"hello\"));\n            this.loadSavedSessions()\n        })\n        .catch(err => console.log(err.response));\n    }\n\n    loadSavedSessions = () => {\n        API.getSessions()\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err.response));\n    }\n\n    deleteSavedSessions = () => {\n        API.deleteSessions()\n        .then(res => {\n            console.log(res.data)\n            this.loadSavedSessions()\n        })\n        .catch(err => console.log(err.response));\n    }\n\n    loginClick = () => {\n        this.setState({showResults: true});\n    }\n\n    printState = () => {\n        console.log(this.state.randomWord)\n        console.log(this.state.randomURL)\n        console.log(this.state)\n    }\n\n    enterGame = () => {\n        let newWord = this.state.enteredWord.toLowerCase();\n        API.checkSessionTitle(newWord)\n          .then(res => {\n            if (!res.data.length) return this.setState({ showError: true });\n            this.props.history.push(`/game${res.data[0].url}`);\n          })\n          .catch(err => console.log(err.response));\n      };\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <Logo></Logo>\n                <SignupBtn onClick={this.generateRandomWord} randomword={this.state.randomWord} \n                showbutton={this.state.showButton.toString()}/>\n\n                { this.state.showResults === false ? \n                    <LoginBtn onClick={this.loginClick} />\n                : null}\n\n                { this.state.showResults ? \n                <div>\n                    <Enter name=\"enteredWord\" value={this.state.enteredWord} onChange={this.handleInputChange}/> \n                    <EnterBtn onClick={this.enterGame}/> \n                </div>\n                : null }\n\n                { this.state.showError ? \n                    <div> \n                        <p id=\"session-not-exist\">Session does not exist, double check game keyword or create new game</p>\n                    </div>\n                : null }\n\n                <Modal \n                    className=\"game-instructions\" \n                    id=\"general-game-instructions\" \n                    text=\"How to Play\"\n                    modalTitle=\"How to Play\"\n                    modalInstructions1= \"If you are starting a new game with friends, click 'Create Game' to generate your unique room key.\" \n                    modalInstructions2=\"Click 'Join Game' and enter your room key to start playing. \"\n                    modalInstructions3=\"Share your room key with your friends so you can all play together!\"\n                ></Modal>\n\n                {/* <button onClick={this.deleteSavedSessions}>Delete Sessions</button> */}\n                \n            </div>\n        );\n    }\n}\n\nexport default Login;","import React from \"react\";\nimport \"./style/bottomNav.css\";\n\nconst BottomNav = props => (\n\t<nav className={props.class}>\n\t\t<div className=\"content-holder\">\n\t\t\t<i onClick={props.expand} className=\"fas fa-bars home-button\"></i>\n\t\t</div>\n\t\t{props.children}\n\t</nav>\n);\n\nexport default BottomNav;\n","import React from \"react\";\n\nconst CurrentPlayer = props => (\n  <div className=\"player\">\n    <div className=\"navbar-username\">\n      <span style={{color:props.userColor}}>\n        <i className=\"fas fa-circle\"></i>\n      </span> {props.playerName}\n    </div>\n\n    <span className=\"navbar-score\"><i className=\"fas fa-trophy\"></i> {props.playerScore}</span>\n  </div>\n)\n\nexport default CurrentPlayer;","import React from \"react\";\nimport \"./style/gif.css\";\n\nconst Gif = props => (\n  <div className=\"gif-component\" onClick={props.onClick} key={props.user}>\n    <img src={props.src} className=\"gif-preview\" data={props.user} alt=\"\"/>\n  </div>\n)\n\nexport default Gif;","import React, { Component } from \"react\";\nimport Gif from \"../Gif/Gif\";\nimport \"./style/GifReveal.css\";\n\nclass GifReveal extends Component {\n  state = {\n    gifsReturned: [],\n    gifsReturnedShuffle: [],\n    users: [],\n    judge: \"\",\n    judgeSocket: \"\",\n    userSocket: \"\",\n    socket: \"\",\n    showJudgeInstructions: false\n  }\n\n  componentDidMount = () => {\n\n    const shuffleArray = arr => arr.sort(() => Math.random() - 0.5)\n\n    this.setState({gifsReturned: this.props.gifsReturned})\n    this.setState({gifsReturnedShuffle: shuffleArray(this.props.gifsReturned)})\n    this.setState({userSocket: this.props.userSocket})\n    this.setState({socket: this.props.socket})\n    this.setState({users: this.props.users}, function() {\n      for (var i = 0; i < this.state.users.length; i ++ ) {\n        if (this.state.users[i].judge) {\n          this.setState({judgeSocket: this.state.users[i].ip}, function() {\n            if (this.state.userSocket === this.state.judgeSocket) {\n              this.setState({showJudgeInstructions: true})\n            }\n          })\n          this.setState({judge: this.state.users[i].name})\n          break\n        }\n      }\n    }) \n  }\n\n  componentDidUpdate = () => {\n\n    const shuffleArray = arr => arr.sort(() => Math.random() - 0.5)\n\n    if (this.props.gifsReturned !== this.state.gifsReturned) {\n      this.setState({gifsReturned: this.props.gifsReturned})\n      this.setState({gifsReturnedShuffle: shuffleArray(this.props.gifsReturned)})\n    }\n\n    if (this.props.users !== this.state.users) {\n      this.setState({users: this.props.users}, function() {\n        for (var i = 0; i < this.state.users.length; i ++ ) {\n          if (this.state.users[i].judge) {\n            this.setState({judgeSocket: this.state.users[i].ip}, function(){\n              if (this.state.userSocket === this.state.judgeSocket) {\n                this.setState({showJudgeInstructions: true})\n              }\n            })\n            this.setState({judge: this.state.users[i].name})\n            break\n          }\n        }\n      })\n    }\n  }\n\n  selectWinner = (event) => {\n\n    if (this.state.userSocket === this.state.judgeSocket) {\n\n      let ip = event.target.getAttribute('data')\n      let gifurl = event.target.getAttribute('src')\n      let winner = {\n        gif: gifurl\n      }\n\n      for (var i = 0; i < this.state.users.length; i ++ ) {\n\n        if (this.state.users[i].ip === ip) {\n          winner['member'] = this.state.users[i]\n          break\n        }\n      }\n\n      const self = this\n      self.state.socket.emit('winnersocket', winner)\n\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"gif-reveal-component\">\n\n        { this.state.showJudgeInstructions ? \n          <h1 className=\"pick-winner-instruction\">Pick a winner!</h1>\n        : null}\n\n        <div className=\"theme-and-category\" id=\"gif-reveal-prompt\"> \n            <p className=\"theme-prompt\">{this.props.theme}</p>\n            <p className=\"category-prompt\">{this.props.category}</p>\n        </div>\n\n        <div className=\"gif-reveal-div\">\n          {this.state.gifsReturnedShuffle.map(gif => (\n              <Gif onClick={this.selectWinner} src={gif.gif} user={gif.member.ip}/>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default GifReveal;","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Gif from \"../Gif/Gif\";\nimport Modal from \"../../components/Modal/Modal\";\nimport \"./style/GiphySearch.css\";\n\nclass GiphySearch extends Component {\n\n    //set state\n    state = {\n        searchTerm: \"\",\n        image_url: \"http://via.placeholder.com/500x240/31263E/31263E\",\n        defaultGif: \"https://media.giphy.com/media/DGiZfWmc0HWms/giphy.gif\"\n    }\n  \n    //mount component\n    componentDidMount = () => {\n        console.log(\"Mounted\");\n    }\n  \n    //after everything else loads, when the component updates\n    componentDidUpdate = () => {\n  \n      if (this.props.timer) {\n  \n          let gifObject = {\n              socket: this.props.userSocket,\n              gif: this.state.defaultGif\n          }\n  \n          this.props.socket.emit('playeroutoftime', gifObject)\n          this.props.outOfTime(\"pendingMessage\", \"Players choosing gifs\")\n          this.props.outOfTime(\"pendingPlayerHeader\", \"Players done with challenge\")\n          this.props.outOfTime(\"showGiphySearch\", false)\n          this.props.outOfTime(\"showPending\", true)\n  \n      }\n  \n    }\n\n    //make api call and show loading gif\n    callGIPHY = () => {\n    \n        this.setState({image_url: \"https://media.giphy.com/media/xTk9ZvMnbIiIew7IpW/giphy.gif\"})\n    \n        API.getGIF(this.state.searchTerm)\n        .then(response => {\n            this.setState({\n                image_url: response.data.original.url\n            });\n        })\n        .catch(err => console.log(err))\n      }\n    \n      //handle input change\n      handleInputChange = event => {\n          const { name, value } = event.target;\n          this.setState({\n              [name]: value\n          });\n      };\n    \n      //set search term in state\n      searchTerm = event => {\n        const value = event.target.value;\n        this.setState({\n            searchTerm: value\n        });\n      }\n    \n      //confirm button\n      confirmSelection = () => {\n    \n        if (this.state.image_url !== \"http://via.placeholder.com/500x240/31263E/31263E\") {\n        //That gif\n        let gifObject = {\n            socket: this.props.userSocket,\n            gif: this.state.image_url\n        }\n    \n        //SOCKET FUN!\n        this.props.socket.emit('playergifchosen', gifObject)\n        this.props.outOfTime(\"pendingMessage\", \"Players choosing gifs\")\n        this.props.outOfTime(\"pendingPlayerHeader\", \"Players done with challenge\")\n        this.props.outOfTime(\"outOfTime\", false)\n        this.props.outOfTime(\"showTimer\", false)\n        this.props.outOfTime(\"showGiphySearch\", false)\n        this.props.outOfTime(\"showPending\", true)\n        }\n      }\n    \n      render() {\n        return (\n            <div className=\"giphy-component\">    \n              <Modal\n                  className=\"game-instructions\"\n                  id=\"giphy-search-instructions\"\n                  text=\"?\"\n                  modalTitle=\"What Now?\"\n                  modalInstructions1=\"Try to find the perfect gif by entering a search term or phrase into the search bar. Click on the magnifying glass to search. You will be returned one gif at a time. If you like the gif, click the check mark button. If you want to shuffle, click the reload button.\"\n                  modalInstructions2=\"If you want to search a different term or phrase, just use the search bar again.\"\n                  modalInstructions3= \"Be sure to choose a gif before the time runs out!\"\n              >\n              </Modal>\n  \n              <p className=\"judge\" id=\"giphy-search-judge\" style={{backgroundColor:'#C0C0C0'}}><i className=\"fas fa-gavel\"></i> {this.props.judge}</p>\n              \n              <div className=\"theme-and-category\" id=\"giphy-search-prompt\"> \n                  <p className=\"theme-prompt\" id=\"giphy-theme-prompt\">{this.props.theme}</p>\n                  <p className=\"category-prompt\">{this.props.category}</p>\n              </div>\n  \n                <div className=\"search-holder\">\n                  <input name=\"giphySearchBar\" onChange={this.searchTerm} type=\"text\" />\n                  <div onClick={this.callGIPHY} className=\"search-button\">\n                      <i className=\"fas fa-search\"></i>\n                  </div>\n                  <Gif src={this.state.image_url}/>\n  \n                  <div className=\"button-holder\">\n                      <div className=\"timer-placeholder\">\n                          <span className=\"timer\">{this.props.children}</span>\n                      </div>\n                      <div className=\"button research\" onClick={this.callGIPHY}>\n                          <i className=\"fas fa-redo\"></i>\n                      </div>\n                      <div className=\"button confirm\" onClick={this.confirmSelection}>\n                          <i className=\"fas fa-check\"></i>\n                      </div>\n                  </div>\n                </div>\n            </div>\n        );\n    }\n  }\n    \n    export default GiphySearch;","import React, { Component } from \"react\";\nimport \"./style/loadingScreen.css\";\nimport Modal from \"../../components/Modal/Modal\";\n\nclass LoadingScreen extends Component {\n\n  state = {\n    userName: \"\",\n    userScore: \"\",\n    userColor: \"\",\n    userJudge: \"\",\n    // Players logged in, Players this round\n    pendingMessage: \"\",\n    pendingPlayerHeader: \"\",\n    judge: \"\",\n    members: \"\",\n    // Show keyword on first loading screen\n    showKeyword: false,\n    // Show theme and category on all other loading screens\n    showTheme: false,\n    category: \"\",\n    theme: \"\",\n    // Show judge start button or judge reveal button\n    showChoices: false\n  }\n\n  componentDidMount = () => {\n    this.setState({userName: this.props.userName})\n    this.setState({userScore: this.props.userScore})\n    this.setState({userJudge: this.props.userJudge})\n    this.setState({userColor: this.props.userColor})\n    this.setState({showChoices: this.props.showChoices})\n    \n    if (this.props.theme && this.props.category) {\n      this.setState({category: this.props.category})\n      this.setState({theme: this.props.theme})\n    }\n\n    this.setState({pendingMessage: this.props.pendingMessage}, function() {\n      this.checkMessage()\n    })\n    this.setState({pendingPlayerHeader: this.props.pendingPlayerHeader})\n    this.setState({members: this.props.members}, function() {\n      this.checkJudge()\n    })\n  }\n\n  componentDidUpdate = () => {\n    if (this.props.members !== this.state.members) {\n      this.setState({members: this.props.members}, function() {\n        console.log(this.state.members)\n        this.checkJudge()\n      })\n    }\n\n    if (this.props.pendingMessage !== this.state.pendingMessage) {\n      this.setState({pendingMessage: this.props.pendingMessage}, function() {\n        this.checkMessage()\n      })\n    }\n\n    if (this.props.pendingPlayerHeader !== this.state.pendingPlayerHeader) {\n      this.setState({pendingPlayerHeader: this.props.pendingPlayerHeader})\n    }\n\n    if (this.props.theme !== this.state.theme) {\n      this.setState({theme: this.props.theme})\n    }\n\n    if (this.props.category !== this.state.category) {\n      this.setState({category: this.props.category})\n    }\n\n    if (this.props.showChoices !== this.state.showChoices) {\n      this.setState({showChoices: this.props.showChoices})\n      this.setState({showTheme: false})\n    }\n  }\n\n  checkMessage = () => {\n    if (this.state.pendingMessage === \"Players choosing gifs\") {\n      this.setState({showKeyword: false})\n      this.setState({showTheme: true})\n    }\n\n    if (this.state.pendingMessage === \"Waiting for game to start...\" || this.state.pendingMessage === \"Click start game when ready to play\") {\n      this.setState({showKeyword: true})\n      this.setState({showTheme: false})\n    }\n\n    else if (this.state.pendingPlayerHeader === \"Players in round\") {\n      this.setState({showKeyword: false})\n      this.setState({showTheme: false})\n    }\n  }\n\n  checkJudge = () => {\n      console.log(this.state.members)\n      for (var i = 0; i < this.state.members.length; i ++) {\n        if (this.state.members[i].judge) {\n          this.setState({judge: this.state.members[i].name})\n        }\n      }\n  }\n\n  startGame = () => {\n    const self = this\n    self.props.socket.emit('startgame')\n  }\n  \n  showGifs = () => {\n    const self = this\n    self.props.socket.emit('revealgifs')\n  }\n\nrender() {\n  return (\n    <div className=\"loading-screen-holder\">\n\n      { this.state.showKeyword ? \n        <div className=\"pull-themes-btn\">\n          { this.state.userJudge ? \n            <Modal \n              className=\"game-instructions\" \n              id=\"game-start-instructions\" \n              text=\"?\"\n              modalTitle=\"What Now?\"\n              modalInstructions= \n                  \"You are the judge this round! Wait until all your friends join the game room, then click 'Start Game'.\"\n              ></Modal>\n          : \n            <Modal \n              className=\"game-instructions\" \n              id=\"game-start-instructions\" \n              text=\"?\"\n              modalTitle=\"What Now?\"\n              modalInstructions= \n                  \"You are a player this round! The judge will start the game once everyone joins.\"\n            ></Modal>\n          }\n        </div>\n      : null }\n    \n      { this.state.showTheme ? \n        <div className=\"theme-and-category\" id=\"loading-pg-prompt\"> \n          <p className=\"theme-prompt\">{this.state.theme}</p>\n          <p className=\"category-prompt\">{this.state.category}</p>\n        </div>\n      : null }\n\n      <div>\n        <p className=\"waiting-msg\">{this.state.pendingMessage}</p>\n          <div>\n            <h1 id=\"current-players\"> {this.state.pendingPlayerHeader} </h1>\n              <div className=\"current-players-div\">\n                  {this.state.members.length ? (\n                        <div style={{display: \"inline-block\"}}>\n                            {this.state.members.map(member => (\n                              <div className=\"player-bubble\" key={member.ip}>\n                                <span className=\"fa-stack fa-3x\" id=\"user-icon\">\n                                  <i className=\"fas fa-circle\" style={{color:member.color}}></i>\n                                  <strong className=\"fa-stack-1x\" id=\"username\">{String.fromCodePoint(member.name.codePointAt(0))}</strong>\n                                </span>\n                              </div>\n                            ))}\n                        </div>\n                  ) : null} \n              </div>\n          </div>\n      </div>\n\n      { this.state.showKeyword ? \n        <div className=\"pull-themes-btn\">\n          { this.state.userJudge ? \n            <Modal \n              className=\"game-instructions\" \n              id=\"game-start-instructions\" \n              text=\"?\"\n              modalTitle=\"What Now?\"\n              modalInstructions1= \n                \"You are the judge this round!\"\n              modalInstructions2 = \n                \"Wait until all your friends join the game room, then click 'Start Game'.\"\n              modalInstructions3 = \"\"\n              ></Modal>\n          : \n            <Modal \n              className=\"game-instructions\" \n              id=\"game-start-instructions\" \n              text=\"?\"\n              modalTitle=\"What Now?\"\n              modalInstructions1= \n                \"You are a player this round!\"\n              modalInstructions2 = \n                \"The judge will start the game once everyone joins.\"\n              modalInstructions3 = \"\"\n              \n            ></Modal>\n          }\n\n          <p className=\"judge\" style={{backgroundColor:'#C0C0C0'}}><i className=\"fas fa-gavel\"></i> {this.props.judge}</p>\n\n          <div id=\"loading-pg-roomkey\"> \n            <p><i className=\"fas fa-key\"></i> {this.props.keyword}</p>\n          </div>\n\n          <span className=\"btn\">\n            { this.state.userJudge ? \n              <p className=\"judge-start\" onClick={this.startGame}>Start Game</p>\n            : null}\n          </span>\n        </div>\n      : null}\n\n      { this.state.userJudge ? \n        <div>\n          { this.state.showChoices ? \n            <p className=\"show-gifs-btn\" onClick={this.showGifs}>Show Gifs</p>\n          : null}\n        </div>\n      : null}\n\n    </div>\n  )\n}\n}\n\nexport default LoadingScreen;","import React from \"react\";\nimport \"./style/playerList.css\";\n\nconst PlayerList = props => (\n  <div className=\"player\">\n    <div className=\"navbar-username\">\n      <span style={{color:props.userColor}}>\n        <i className=\"fas fa-circle\"></i>\n      </span> {props.playerName}\n    </div>\n\n    <span className=\"navbar-score\"><i className=\"fas fa-trophy\"></i> {props.playerScore}</span>\n  </div>\n)\n\nexport default PlayerList;","import React from \"react\";\nimport \"./style/playerlistHolder.css\";\n\nconst PlayerListHolder = props => (\n  <div className=\"playerlist-holder\">\n    {props.children}\n  </div>\n)\n\nexport default PlayerListHolder;","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport \"./style/profile.css\";\n\n\nclass Profile extends Component {\n\n    state = {\n        url: \"\",\n        username: \"\",\n        color: \"\",\n        ip: \"\",\n        judge: false,\n        showError: false,\n        memberArray: [],\n        joinClasses: \"join-btn cantJoin\",\n    }\n\n    componentDidMount = () => {\n        console.log(this.props)\n        this.setState({url: this.props.url})\n        this.setState({ip: this.props.ip})\n        this.setState({memberArray: this.props.memberArray}, function() {\n            console.log(this.state)\n        })\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    //Assign user color and judge\n    setupProfile = event => {\n        const self = this;\n        let divTarget = event.target\n        let profileColor = divTarget.getAttribute('data')\n        this.setState({color:profileColor}, function(){\n            self.onClickIdHandler()\n            API.checkSessionUrl(this.state.url)\n            .then(res => {\n\n                if (res.data[0].title === sessionStorage.getItem('roomkey')) {\n                    this.setState({judge: true});\n                }\n\n                else {\n                    this.setState({judge: false})\n                }\n\n                this.setState({joinClasses: \"join-btn join\"})\n            })\n        })\n\n    }\n\n    //Update user to loading screen\n    addMember = () => {\n        if (this.state.username === \"\") {\n            this.setState({showError: true})\n        }\n        else if (this.state.color === \"\") {\n            this.setState({showError: true})\n        }\n        else {\n\n            let randomNumber = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1)   \n            let newUsername = this.state.username + randomNumber         \n            sessionStorage.setItem(\"username\", newUsername)\n            console.log(\"SESSION STORAGE\")\n            console.log(sessionStorage.getItem(\"username\"))\n            this.props.profileAdded('socketAddress', newUsername)\n\n            API.addSessionMember({\n                url: this.state.url,\n                username: this.state.username,\n                color: this.state.color,\n                ip: newUsername,\n                judge: this.state.judge\n            })\n            .then(res => {\n                this.showSessionData()\n            })\n            .catch(err => console.log(err.response));\n        }\n    }\n    \n    showSessionData = () => {\n        console.log(\"member data added\")\n        const self = this\n        self.props.socket.emit('useradded')\n\n    }\n\n    onClickIdHandler = () => {\n        let btns = document.getElementsByClassName(\"color-btn\");\n\n        for (let i=0;i<btns.length;i++) {\n            if(btns[i].getAttribute('data') === this.state.color) {\n                btns[i].setAttribute('id', 'selected')\n            }\n            else {\n                btns[i].removeAttribute('id')\n            }\n        }\n    }  \n\n    render() {\n        return (\n            <div className=\"profile-pg-component\">\n                <div>\n                    <div className=\"setup-profile\">Setup Your Profile</div>\n                    <input id=\"enter-name\" type=\"text\" placeholder=\"Enter Name\" name=\"username\" value={this.state.username} onChange={this.handleInputChange}/>\n                </div>\n                \n                <div className=\"setup-color-buttondiv\">\n                    <div className=\"pick-a-color\">Pick a Color</div>\n                    <span data=\"#FFC655\" className=\"yellow-prof btn color-btn\" onClick={this.setupProfile}></span>\n                    <span data=\"#5FACFF\" className=\"blue-prof btn color-btn\" onClick={this.setupProfile}></span>\n                    <span data=\"#FF6161\" className=\"red-prof btn color-btn\" onClick={this.setupProfile}></span>\n                    <span data=\"#C0C0C0\" className=\"grey-prof btn color-btn\" onClick={this.setupProfile}></span>\n                    <span data=\"#44BBA4\" className=\"green-prof btn color-btn\" onClick={this.setupProfile}></span>\n                    <span data=\"#D45FFF\" className=\"pink-prof btn color-btn\" onClick={this.setupProfile}></span>\n                    <span data=\"#FF8A5B\" className=\"orange-prof btn color-btn\" onClick={this.setupProfile}></span>\n                    <span data=\"#9964FF\" className=\"purple-prof btn color-btn\" onClick={this.setupProfile}></span>\n                    <span data=\"#444444\" className=\"charcoal-prof btn color-btn\" onClick={this.setupProfile}></span>\n                </div>\n\n                <div onClick={this.addMember} className=\"complete-profile-btn\">\n                    <span className={this.state.joinClasses}>Join Game</span>\n                </div>\n\n                { this.state.showError ?\n                        <div>\n                            <p id=\"username-error\">Please enter a username and choose a color</p>\n                        </div>\n                : null }\n                \n             </div>\n        )\n    }\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport \"./style/promptSelect.css\";\n\nclass PromptSelect extends Component {\n\n    state = {\n        theme: \"\",\n        category: \"\"\n    }\n\n    selectedTheme = (event) => {\n\n        let divTarget = event.target\n        let theme = divTarget.getAttribute('id')\n        let categoryString = divTarget.getAttribute('data')\n        let categoryArray = categoryString.split(',')\n        let selectedCategory = categoryArray[Math.floor(Math.random() * categoryArray.length)]\n\n        let selectedObject = {\n            \"theme\": theme,\n            \"category\": selectedCategory\n        }\n        \n        this.props.socket.emit('categorytheme selected', selectedObject)\n    }\n\n    render() {\n        return (\n            <div onClick={this.selectedTheme} className=\"promptSelect-component\"> \n                    <h5 style={{background:this.props.color}} className=\"prompt-card\" id={this.props.theme} data={this.props.categories}>\n                        <i className={this.props.icon}></i>{this.props.theme}\n                    </h5>\n            </div>\n        )\n    }\n}\n\nexport default PromptSelect;","import React from \"react\";\n\nclass Timer extends React.Component {\n\n  state = {\n    timeRemaining: 0\n  }\n\n  componentDidMount = () => {\n    this.countdown();\n  }\n\n  countdown = () => {\n    this.setState({timeRemaining: 45}, function() {\n      let number = this.state.timeRemaining;\n      setInterval(() => {\n        if (this.state.timeRemaining > 0) {\n          number--;\n          this.setState({\n                timeRemaining: number\n              });\n        } else {\n          this.props.outOfTime(\"outOfTime\", true)\n          this.props.outOfTime(\"showTimer\", false)\n        }\n        }, 1000)\n    })\n    \n  }\n\nrender() {\n  return (\n    <span>{this.state.timeRemaining}</span>\n    )\n  }\n}\n\nexport default Timer;","import React, { Component } from \"react\";\nimport \"./style/winnerPage.css\";\n\nclass WinnerPage extends Component {\n  state = {\n    judge: \"\",\n    gif: \"\",\n    winner: \"\",\n    winnerColor: \"\",\n    userJudge: \"\"\n  }\n\n\tcomponentDidMount = () => {\n    this.setState({gif: this.props.winner.gif})\n    this.setState({winner: this.props.winner.member.name})\n    this.setState({winnerColor: this.props.winner.member.color})\n    this.setState({judge: this.props.judge})\n    this.setState({userJudge: this.props.userJudge})  \n  }\n  \n  componentDidUpdate = () => {\n    if (this.props.winner.member.name !== this.state.winner) {\n      this.setState({winner: this.props.winner.member.name})\n    }\n\n    if (this.props.winner.member.color !== this.state.winnerColor) {\n      this.setState({winnerColor: this.props.winner.member.color})\n    }\n\n    if (this.props.winner.gif !== this.state.gif) {\n      this.setState({gif: this.props.winner.gif})\n    }\n\n    if (this.props.judge !== this.state.judge) {\n      this.setState({judge: this.props.judge})\n    }\n\n    if (this.props.userJudge !== this.state.userJudge) {\n      this.setState({userJudge: this.props.userJudge})\n    }\n  }\n\n  startGame = () => {\n    const self = this\n    self.props.socket.emit('startnextround')\n  }\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"winnerScreen-component\">\n\n        <div className=\"theme-and-category\" id=\"winner-pg-prompt\"> \n            <p className=\"theme-prompt\" id=\"winner-pg-theme\">{this.props.theme}</p>\n            <p className=\"category-prompt\" id=\"winner-pg-category\">{this.props.category}</p>\n        </div>\n\n        <div className=\"winning-gif-holder\">\n          <img className=\"winning-gif\" src={this.state.gif} alt=\"\"/>\n        </div>\n\n        <h1 className=\"winner-name\">{this.state.winner} wins!</h1>\n\n        <span className=\"btn\">\n          { this.state.userJudge ? \n            <p className=\"next-round-btn\" onClick={this.startGame}>Next Round</p>\n          : null}\n        </span>\n\n      </div>\n\t\t\t);\n\t}\n}\n\nexport default WinnerPage;","const reloadSocket = (res, stateChange, socket) => {\n\n    let socketMessageUsername = sessionStorage.getItem(\"socketMessage\")\n    let pendingPlayerHeader = \"\"\n    let socketAddress = sessionStorage.getItem(\"username\")\n    console.log(socketAddress)\n    console.log(socketMessageUsername)\n    let userJudge = false;\n    let currentJudge = \"\";\n    let allPlayers = [];\n\n    if ( socketMessageUsername === \"useraddedsuccessfullyother\" || socketMessageUsername === \"useraddedsuccessfullyself\" ) {\n        pendingPlayerHeader = \"Players logged in\"\n        updateMembers(res, function() {\n            if (userJudge) {\n                stateChange(\"pendingPlayerHeader\", \"Players logged in\")\n                stateChange(\"pendingMessage\",\"Click start game when ready to play\")\n                stateChange(\"showProfile\", false)\n                stateChange(\"showPending\", true)\n            }\n    \n            else {\n                stateChange(\"pendingPlayerHeader\", \"Players logged in\")\n                stateChange(\"pendingMessage\",\"Waiting for game to start...\")\n                stateChange(\"showProfile\", false)\n                stateChange(\"showPending\", true)\n            }\n        })\n    }\n\n    if ( socketMessageUsername === \"startgameplayer\") {\n        pendingPlayerHeader = \"Players in round\"\n        updateMembers(res, function() {\n            stateChange(\"pendingPlayerHeader\", \"Players in round\")\n            let message = currentJudge + \" choosing category...\"\n            stateChange(\"pendingMessage\", message)\n            stateChange(\"showPending\", true)\n        })\n    }\n\n    if ( socketMessageUsername === \"startgamejudge\") {\n        updateMembers(res, function() {\n            stateChange(\"showJudgeCategory\", true)\n        })\n    }\n\n    if ( socketMessageUsername === \"startnextroundplayer\") {\n        pendingPlayerHeader = \"Players in round\"\n        stateChange(\"pendingPlayerHeader\", \"Players in round\")\n        stateChange(\"gifsReturned\", [])\n        stateChange(\"outOfTime\", false)\n        updateMembers(res, function() {\n            let message = currentJudge + \" choosing category...\"\n            stateChange(\"pendingMessage\", message)\n            stateChange(\"showPending\", true)\n        })\n\n    }\n\n    if ( socketMessageUsername === \"startnextroundjudge\") {\n        stateChange(\"gifsReturned\", [])\n        stateChange(\"outOfTime\", false)\n        updateMembers(res, function() {\n            stateChange(\"showJudgeCategory\", true)\n        })\n    }\n\n    if ( socketMessageUsername === \"categorytheme selected player\") {\n        stateChange(\"selectedTheme\", sessionStorage.getItem(\"selectedTheme\"))\n        stateChange(\"selectedCategory\", sessionStorage.getItem(\"selectedCategory\"))\n        updateMembers(res, function() {\n            stateChange(\"showGiphySearch\", true)\n            stateChange(\"showTimer\", true)\n        })\n    }\n\n    if ( socketMessageUsername === \"categorytheme selected judge\") {\n        pendingPlayerHeader = \"Players choosing gifs\"\n        stateChange(\"selectedTheme\", sessionStorage.getItem(\"selectedTheme\"))\n        stateChange(\"selectedCategory\", sessionStorage.getItem(\"selectedCategory\"))\n        stateChange(\"pendingMessage\", \"Players choosing gifs\")\n        stateChange(\"pendingPlayerHeader\", \"Players done with challenge\")\n        updateMembers(res, function() {\n            stateChange(\"playerList\", JSON.parse(sessionStorage.getItem(\"playerArray\")))\n            stateChange(\"showTimer\", true)\n            stateChange(\"showPending\", true)\n        })\n    }\n\n    if ( socketMessageUsername === \"playeroutoftimereturned\") {\n        let gifsReturned = JSON.parse(sessionStorage.getItem(\"gifsReturned\"))\n        stateChange(\"gifsReturned\", gifsReturned)\n        stateChange(\"selectedTheme\", sessionStorage.getItem(\"selectedTheme\"))\n        stateChange(\"selectedCategory\", sessionStorage.getItem(\"selectedCategory\"))\n        stateChange(\"pendingMessage\", \"Players choosing gifs\")\n        stateChange(\"pendingPlayerHeader\", \"Players done with challenge\")\n        updateMembers(res, function() {\n            stateChange(\"playerList\", JSON.parse(sessionStorage.getItem(\"playerArray\")))\n            stateChange(\"showPending\", true)\n            \n            let playerArray = JSON.parse(sessionStorage.getItem(\"playerArray\"))\n\n            if (userJudge) {\n                stateChange(\"showTimer\", true)\n            }\n\n            if (allPlayers.length === (playerArray.length)) {\n                stateChange(\"outOfTime\", true)\n                stateChange(\"showTimer\", false)\n                stateChange(\"showJudgeChoices\", true)\n            }\n            \n        })\n    }\n\n    if ( socketMessageUsername === \"playerchosenreturned\") {\n        let gifsReturned = JSON.parse(sessionStorage.getItem(\"gifsReturned\"))\n        stateChange(\"gifsReturned\", gifsReturned)\n        stateChange(\"selectedTheme\", sessionStorage.getItem(\"selectedTheme\"))\n        stateChange(\"selectedCategory\", sessionStorage.getItem(\"selectedCategory\"))\n        stateChange(\"pendingMessage\", \"Players choosing gifs\")\n        stateChange(\"pendingPlayerHeader\", \"Players done with challenge\")\n        updateMembers(res, function() {\n            stateChange(\"playerList\", JSON.parse(sessionStorage.getItem(\"playerArray\")))\n            stateChange(\"showPending\", true)\n\n            let playerArray = JSON.parse(sessionStorage.getItem(\"playerArray\"))\n            \n            if (userJudge) {\n                stateChange(\"showTimer\", true)\n            }\n\n            if (allPlayers.length === (playerArray.length)) {\n                stateChange(\"outOfTime\", true)\n                stateChange(\"showTimer\", false)\n                stateChange(\"showJudgeChoices\", true)\n            }\n\n        })\n    }\n\n    if ( socketMessageUsername === \"revealgifsjudge\") {\n        let gifsReturned = JSON.parse(sessionStorage.getItem(\"gifsReturned\"))\n        stateChange(\"gifsReturned\", gifsReturned)\n        stateChange(\"selectedTheme\", sessionStorage.getItem(\"selectedTheme\"))\n        stateChange(\"selectedCategory\", sessionStorage.getItem(\"selectedCategory\"))\n        updateMembers(res, function() {\n            stateChange(\"showGifReveal\", true)\n        })\n    }\n\n    if ( socketMessageUsername === \"revealgifsplayer\") {\n        let gifsReturned = JSON.parse(sessionStorage.getItem(\"gifsReturned\"))\n        stateChange(\"gifsReturned\", gifsReturned)\n        stateChange(\"selectedTheme\", sessionStorage.getItem(\"selectedTheme\"))\n        stateChange(\"selectedCategory\", sessionStorage.getItem(\"selectedCategory\"))\n        updateMembers(res, function() {\n            stateChange(\"showGifReveal\", true)\n            \n        })\n    }\n\n    if ( socketMessageUsername === \"winnerinfojudge\") {\n        let winner = JSON.parse(sessionStorage.getItem(\"winner\"))\n        stateChange(\"winner\", winner)\n        updateMembers(res, function() {\n\n            let allPlayerArray = []\n            let oldJudge = \"\"\n\n            for (var i = 0; i < allPlayers.length; i ++ ) {\n                if (allPlayers[i].judge === false) {\n                    allPlayerArray.push(allPlayers[i])\n                }\n\n                else {\n                    oldJudge = allPlayers[i]\n                }\n            }\n            \n            stateChange({oldJudge: oldJudge})\n            sessionStorage.setItem(\"oldJudge\", oldJudge)\n            let randomJudge = allPlayerArray[Math.floor(Math.random() * allPlayerArray.length)]\n\n            socket.emit('choosenewjudge', randomJudge)\n\n        })\n    }\n\n    if ( socketMessageUsername === \"winnerinfoplayer\") {\n        let winner = JSON.parse(sessionStorage.getItem(\"winner\"))\n        stateChange(\"winner\", winner)\n    }   \n\n    if ( socketMessageUsername === \"newjudgeupdated\" ) {\n        let oldJudge = sessionStorage.getItem(\"oldJudge\")\n        socket.emit('changeoldjudge', oldJudge)\n    }\n\n    if ( socketMessageUsername === \"oldjudgeupdated\") {\n        socket.emit(\"newgame\")\n    }\n\n    if ( socketMessageUsername === \"newgamejudge\" ) {\n        let winner = JSON.parse(sessionStorage.getItem(\"winner\"))\n        stateChange(\"winner\", winner)\n        stateChange(\"selectedTheme\", sessionStorage.getItem(\"selectedTheme\"))\n        stateChange(\"selectedCategory\", sessionStorage.getItem(\"selectedCategory\"))\n        updateMembers(res, function() {\n            stateChange(\"showWinner\", true)\n        })\n    }\n\n    if ( socketMessageUsername === \"newgameplayer\" ) {\n        let winner = JSON.parse(sessionStorage.getItem(\"winner\"))\n        stateChange(\"winner\", winner)\n        stateChange(\"selectedTheme\", sessionStorage.getItem(\"selectedTheme\"))\n        stateChange(\"selectedCategory\", sessionStorage.getItem(\"selectedCategory\"))\n        updateMembers(res, function() {\n            stateChange(\"showWinner\", true)\n        })\n    }\n\n    function updateMembers(data, callback) {\n        console.log(\"update members triggered\")\n\n        let members = []\n\n        if (data.model) {\n            members = data.model[0].members\n        }\n\n        else if (data.data) {\n            members = data.data[0].members\n        }\n\n        console.log(members)\n        const bottomNavArray = []\n        const playerList = []\n        const totalPlayerList = []\n        let count = 1\n\n        for (var i = 0; i < members.length; i ++) {\n\n            totalPlayerList.push(members[i])\n\n            if (members[i].ip === socketAddress) {\n                stateChange('userName', members[i].name)\n                stateChange('userScore', members[i].score)\n                stateChange('userColor', members[i].color)\n                stateChange('userJudge', members[i].judge)\n                \n                if (members[i].judge) {\n                    userJudge = true\n                }\n\n            }\n            \n            else {\n                bottomNavArray.push(members[i])\n            }\n\n            if ( pendingPlayerHeader === \"Players logged in\") {\n                playerList.push(members[i])\n            }\n\n            else {\n                if (members[i].judge === false) {\n                    playerList.push(members[i])\n                }\n            }\n\n            if (members[i].judge) {\n                currentJudge = members[i].name\n                stateChange('currentJudge', members[i].name)\n            }\n\n            if (count === members.length) {\n                allPlayers = totalPlayerList\n                stateChange('allPlayers', totalPlayerList)\n                stateChange('playerList', playerList)\n                stateChange('BottomNavPlayerList', bottomNavArray)\n            }\n\n            count ++ \n        }\n        callback()\n    }\n}\n    \n\n\n\n\n\n\n\n\n\nexport default reloadSocket;","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport BottomNav from \"../../components/BottomNav/BottomNav\";\nimport CurrentPlayer from \"../../components/CurrentPlayer/CurrentPlayer\";\nimport GifReveal from \"../../components/GifReveal/GifReveal\";\nimport GiphySearch from \"../../components/GiphySearch/GiphySearch\";\nimport io from \"socket.io-client\";\nimport LoadingScreen from \"../../components/LoadingScreen/LoadingScreen\";\nimport PlayerList from \"../../components/PlayerList/PlayerList\";\nimport PlayerListHolder from \"../../components/PlayerListHolder/PlayerListHolder\";\nimport Profile from \"../../components/Profile/Profile\";\nimport PromptSelect from \"../../components/PromptSelect/PromptSelect\";\nimport Timer from \"../../components/Timer/Timer\";\nimport WinnerPage from \"../../components/WinnerPage/WinnerPage\";\nimport reloadSocket from \"./reloadSocket.js\";\nimport \"./style/home.css\";\n\nclass Home extends Component {\n\n    state = {\n        // User information\n        urlString: \"\",\n        keyword: \"\",\n        socketAddress: \"\",\n        userName: \"\",\n        userScore: \"\",\n        userColor: \"\",\n    \n        // All players except user\n        BottomNavPlayerList: [],\n        BottomNavExpanded: false,\n        BottomNavClasses: \"bottom-nav\",\n        userJudge: false, \n        currentJudge: \"\",\n        oldJudge: \"\",\n\n        // If on opening screen, includes all players. Otherwise includes players that are not the judge\n        // from updateMembers function\n        // During play round, includes first only judge, then whatever players are done choosing their gifs\n        playerList: [],\n\n        // List that keeps track of all players\n        allPlayers: [],\n\n        // Theme and Categories\n        themeIndex: \"\",\n        selectedTheme: \"\",\n        selectedCategory: \"\",\n\n        winner: \"\",\n        socket: \"\",\n        pendingMessage: \"\",\n        pendingPlayerHeader: \"\",\n        gifsReturned: [],\n\n        // If user exits, remaining users are reloaded\n        remainingUsers: [],\n        socketCalls: 0,\n\n        // Variables to prompt showing React components\n        showProfile: false,\n        showPending: false, \n        showJudgeCategory: false,\n        showGifReveal: false,\n        showGiphySearch: false,\n        showJudgeChoices: false,\n        showWinner: false,\n        showTimer: false,\n        outOfTime: false,\n\n    }\n\n    // check IP address on mount\n    componentDidMount = () => {\n        this.returnCategories()\n        this.setUrl()\n    }\n\n    configureSocket = (socket) => {\n        const self = this;\n\n        self.state.socket.on('usermade', function(data) {\n\n            console.log(\"usermade socket working\")\n            console.log(data.userid)\n\n            API.checkSessionUrl(self.state.urlString)\n            .then(res => {\n                console.log(res.data[0])\n                console.log(sessionStorage.getItem(\"username\"))\n\n                let count = 0;\n\n                for (var i=0; i < res.data[0].members.length; i ++) {\n                    if (res.data[0].members[i].ip === sessionStorage.getItem(\"username\")) {\n\n                        console.log(\"IF IS ACTIVE\")\n                        console.log(\"API Check SessionURL response:\")\n                        console.log(res)\n                        \n                        reloadSocket(res, self.componentChange.bind(this), self.state.socket)\n                        self.setState({socketAddress: sessionStorage.getItem(\"username\")})\n\n                        break\n                    }\n\n                    else {\n                        count ++\n                    }\n                }\n\n                if (count === res.data[0].members.length) {\n                    console.log(\"ELSE IS ACTIVE\")\n                    self.setState({showProfile: true})\n                }\n            }) \n\n        })\n\n        self.state.socket.on('useraddedsuccessfullyself', function(data) {\n            console.log(\"YOU ARE ADDED\")\n            sessionStorage.setItem(\"socketMessage\", \"useraddedsuccessfullyself\")\n            self.setState({pendingPlayerHeader: \"Players logged in\"})\n            self.updateMembers(data, function() {\n                console.log('useradded')\n                if (self.state.userJudge) {\n                    self.setState({pendingMessage: \"Click start game when ready to play\"})\n                    self.setState({showProfile: false})\n                    self.setState({showPending: true})\n                }\n                else {\n                    self.setState({pendingMessage: \"Waiting for game to start...\"})\n                    self.setState({showProfile: false})\n                    self.setState({showPending: true})\n                } \n            })\n             \n        })\n\n        self.state.socket.on(\"useraddedsuccessfullyother\", function(data) {\n            sessionStorage.setItem(\"socketMessage\", \"useraddedsuccessfullyother\")\n            self.updateMembers(data, function(){console.log('Member added')})\n        })\n\n        self.state.socket.on(\"startgameplayer\", function(data){\n            sessionStorage.setItem(\"socketMessage\", \"startgameplayer\")\n            self.setState({pendingPlayerHeader: \"Players in round\"}, function() {\n                self.updateMembers(data, function() {\n                    let judge = self.state.currentJudge\n                    let message = judge + \" choosing category...\"\n                    self.setState({pendingMessage: message})\n                })\n            })       \n        })\n\n        self.state.socket.on(\"startgamejudge\", function() {\n            sessionStorage.setItem(\"socketMessage\", \"startgamejudge\")\n            self.setState({showPending: false})\n            self.setState({showJudgeCategory: true})\n        })\n\n        self.state.socket.on(\"startnextroundplayer\", function() {\n            sessionStorage.setItem(\"socketMessage\", \"startnextroundplayer\")\n            self.setState({gifsReturned: []})\n            self.setState({outOfTime: false})\n            self.setState({pendingPlayerHeader: \"Players in round\"}, function() {\n                let judge = self.state.currentJudge\n                let message = judge + \" choosing category...\"\n                self.setState({pendingMessage: message}, function() {\n                    self.setState({showWinner: false})\n                    self.setState({showPending: true})\n                })\n            })\n        })\n\n        self.state.socket.on(\"startnextroundjudge\", function() {\n            sessionStorage.setItem(\"socketMessage\", \"startnextroundjudge\")\n            self.setState({gifsReturned: []})\n            self.setState({outOfTime: false})\n            self.setState({showWinner: false})\n            self.setState({showJudgeCategory: true})\n        })\n\n        self.state.socket.on(\"categorytheme selected player\", function(data) {\n            sessionStorage.setItem(\"socketMessage\", \"categorytheme selected player\")\n            sessionStorage.setItem(\"selectedTheme\", data.model.theme)\n            sessionStorage.setItem(\"selectedCategory\", data.model.category)\n            sessionStorage.setItem(\"timer\", 45)\n            self.setState({selectedTheme: data.model.theme})\n            let newArray = []\n            newArray.push(data.model.member)\n            self.setState({playerList: newArray})\n            sessionStorage.setItem(\"playerArray\", JSON.stringify(newArray))\n            self.setState({selectedCategory: data.model.category}, function() {\n                self.setState({showPending: false})\n                self.setState({showTimer: true})\n                self.setState({showGiphySearch: true})\n            })\n        })\n\n        self.state.socket.on(\"categorytheme selected judge\", function(data) {\n            sessionStorage.setItem(\"socketMessage\", \"categorytheme selected judge\")\n            sessionStorage.setItem(\"selectedTheme\", data.model.theme)\n            sessionStorage.setItem(\"selectedCategory\", data.model.category)\n            sessionStorage.setItem(\"timer\", 45)\n\n            console.log(\"YOU SELECTED GAME\")\n            self.setState({showJudgeChoices: false})\n\n            self.setState({selectedTheme: data.model.theme})\n            self.setState({selectedCategory: data.model.category})\n            self.setState({playerList: data.model.member})\n            self.setState({pendingMessage: \"Players choosing gifs\"})\n            self.setState({pendingPlayerHeader: \"Players done with challenge\"}, function() {\n                let newArray = []\n                newArray.push(data.model.member)\n                self.setState({playerList: newArray}, function() {\n                    sessionStorage.setItem(\"playerArray\", JSON.stringify(newArray))\n                    self.setState({showTimer: true}) \n                    self.setState({showJudgeCategory: false})\n                    self.setState({showPending: true})\n                }) \n            }) \n        })\n\n        self.state.socket.on('playeroutoftimereturned', function(data) {\n            sessionStorage.setItem(\"socketMessage\", \"playeroutoftimereturned\")\n            \n            let gifArray = []\n            for (var i = 0; i < self.state.gifsReturned.length; i ++ ) {\n                gifArray.push(self.state.gifsReturned[i])\n            }\n            let newGifObject = {\n                gif: data.model.gif,\n                member: data.model.member\n            }\n\n            gifArray.push(newGifObject)\n            self.setState({gifsReturned: gifArray})\n\n            sessionStorage.setItem(\"gifsReturned\", JSON.stringify(gifArray))\n\n            let playerArray = []\n            for (var j = 0; j < self.state.playerList.length; j ++ ) {\n                playerArray.push(self.state.playerList[j])\n            }\n\n            playerArray.push(data.model.member)\n            self.setState({playerList: playerArray}, function() {\n                sessionStorage.setItem(\"playerArray\", JSON.stringify(playerArray))\n                if (self.state.playerList.length === self.state.allPlayers.length) {\n                    self.setState({outOfTime: true})\n                    self.setState({showTimer: false})\n                    self.setState({showJudgeChoices: true})\n                }\n\n            })\n        })\n\n        self.state.socket.on('playerchosenreturned', function(data) {\n            sessionStorage.setItem(\"socketMessage\", \"playerchosenreturned\")\n\n            let gifArray = []\n            for (var i = 0; i < self.state.gifsReturned.length; i ++ ) {\n                gifArray.push(self.state.gifsReturned[i])\n            }\n            let newGifObject = {\n                gif: data.model.gif,\n                member: data.model.member\n            }\n            gifArray.push(newGifObject)\n            self.setState({gifsReturned: gifArray}, function() {\n                console.log(self.state.gifsReturned)\n            })\n\n            sessionStorage.setItem(\"gifsReturned\", JSON.stringify(gifArray))\n\n            let playerArray = []\n            for (var j = 0; j < self.state.playerList.length; j ++ ) {\n                playerArray.push(self.state.playerList[j])\n            }\n            playerArray.push(data.model.member)\n            self.setState({playerList: playerArray}, function() {\n                sessionStorage.setItem(\"playerArray\", JSON.stringify(playerArray))\n                if (self.state.playerList.length === self.state.allPlayers.length) {\n                    self.setState({outOfTime: true})\n                    self.setState({showTimer: false})\n                    self.setState({showJudgeChoices: true})\n                }\n            })\n        })\n\n        self.state.socket.on('revealgifsjudge', function() {\n            sessionStorage.setItem(\"socketMessage\", \"revealgifsjudge\")\n\n            self.setState({showPending: false})\n            self.setState({showGifReveal: true})\n        })\n\n        self.state.socket.on('revealgifsplayer', function() {\n            sessionStorage.setItem(\"socketMessage\", \"revealgifsplayer\")\n\n            self.setState({showPending: false})\n            self.setState({showGifReveal: true})\n        })\n\n\n        self.state.socket.on('winnerinfojudge', function(data) {\n            sessionStorage.setItem(\"socketMessage\", \"winnerinfojudge\")\n            \n            self.setState({winner: data})\n            \n            sessionStorage.setItem(\"winner\", JSON.stringify(data))\n\n            let allPlayerArray = []\n            let oldJudge = \"\"\n\n            for (var i = 0; i < self.state.allPlayers.length; i ++ ) {\n                if (self.state.allPlayers[i].judge === false) {\n                    allPlayerArray.push(self.state.allPlayers[i])\n                }\n\n                else {\n                    oldJudge = self.state.allPlayers[i]\n                }\n            }\n            \n            self.setState({oldJudge: oldJudge})\n\n            let randomJudge = allPlayerArray[Math.floor(Math.random() * allPlayerArray.length)]\n\n            self.state.socket.emit('choosenewjudge', randomJudge)\n        })\n\n        self.state.socket.on('winnerinfoplayer', function(data) {\n            sessionStorage.setItem(\"socketMessage\", \"winnerinfoplayer\")\n            sessionStorage.setItem(\"winner\", JSON.stringify(data))\n\n            self.setState({winner: data})\n        })\n\n        self.state.socket.on('newjudgeupdated', function() {\n            sessionStorage.setItem(\"socketMessage\", \"newjudgeupdated\")\n  \n            let oldjudge = self.state.oldJudge\n            self.state.socket.emit('changeoldjudge', oldjudge)\n        })\n\n        self.state.socket.on('oldjudgeupdated', function() {\n            sessionStorage.setItem(\"socketMessage\", \"oldjudgeupdated\")\n\n            self.state.socket.emit('newgame')\n        })\n\n        self.state.socket.on('newgamejudge', function(data) {\n            sessionStorage.setItem(\"socketMessage\", \"newgamejudge\")\n\n            self.updateMembers(data, function() {\n                self.setState({showGifReveal: false})\n                self.setState({showWinner: true})\n            })\n        })\n\n        self.state.socket.on('newgameplayer', function(data) {\n            sessionStorage.setItem(\"socketMessage\", \"newgameplayer\")\n\n            self.updateMembers(data, function() {\n                self.setState({showGifReveal: false})\n                self.setState({showWinner: true})\n            })\n        })\n\n        self.state.socket.on('disconnectuser', function() {\n            self.setState({remainingUsers: []})\n            self.setState({socketCalls: 0}, function() {\n                self.state.socket.emit('disconnectuserinfo', sessionStorage.getItem(\"username\"))\n            })\n        })\n\n        self.state.socket.on('disconnectuserself', function() {\n            self.setState({remainingUsers: []})\n            self.setState({socketCalls: 0}, function() {\n                self.state.socket.emit('disconnectuserinfo', sessionStorage.getItem(\"username\"))\n            })\n        })\n\n        self.state.socket.on('remaininguserinfo', function(data) {\n            let playerArray = self.state.remainingUsers\n            playerArray.push(data)\n            let socketCount = self.state.socketCalls + 1\n            self.setState({remainingUsers: playerArray}, function() {\n                self.setState({socketCalls: socketCount}, function() {\n\n                    if (parseInt(self.state.socketCalls) === (parseInt(self.state.allPlayers.length) - 1)) {\n                        \n                        for (var i = 0; i < self.state.allPlayers.length; i ++ ) {\n                            if (self.state.remainingUsers.indexOf(self.state.allPlayers[i].ip) === -1) {\n                                self.state.socket.emit('updateremainingusers', self.state.allPlayers[i])\n                            }\n                        }\n                        \n                    }\n\n                }) \n            })\n        })\n\n        self.state.socket.on('updateremainingusersreturn', function() {\n            self.state.socket.emit('updatedatabase')\n        })\n\n        self.state.socket.on('updatedatabasereturned', function(data) {\n           reloadSocket(data, self.componentChange.bind(this), self.state.socket)\n        })\n\n    }\n\n    // Grab current URL and set state variable, then continue to check URL\n    \n    setUrl = () => {\n        let currenturl = window.location.href;\n        let spliturl = currenturl.split(\"/\");\n        let newurl = \"\"\n        \n        for (var i = 4; i < spliturl.length; i ++ ) {\n            newurl += \"/\" + spliturl[i]\n        }\n\n        this.setState({urlString: newurl}, function() {\n            this.checkURL()\n        })\n    }\n\n    // Check state variable URL against session database. If url exist is database, the user can continue into the game\n    // If the URL does not exist in the database, the user is redirected to an error screen\n    checkURL = () => {\n\n        const self = this\n\n        API.checkSessionUrl(self.state.urlString)\n        .then(res =>{ \n            //Error screen if winner URL doesn't exist\n            if (res.data.length < 1) {\n                console.log(\"Not found\")\n                window.location.href = \"/notfound\"\n                return false\n            }\n\n            //URl exists\n            else {\n                console.log(\"SESSION DATA\")\n                console.log(res.data)\n                console.log(\"You entered a valid session!\")\n                const socket = io(self.state.urlString);\n                console.log(\"Socket object:\", socket);\n\n                this.setState({keyword: res.data[0].title})\n\n                this.setState({socket: socket}, function() {\n                    this.configureSocket(socket)\n                })\n            }\n        })\n        .catch(err => console.log(err.response));\n    };\n\n    componentChange = (field, value) => {\n        this.setState({[field]: value})\n    }\n\n    returnCategories = () => {\n        API.getCategories()\n        .then(response => {\n            console.log(\"CATEGORY RESPONSE\")\n            console.log(response.data);\n            this.setState({themeIndex: response.data});\n        })\n        .catch(err => console.log(err))\n    }\n\n    //Expand navbar\n    expandToggle = () => {\n        if (this.state.BottomNavExpanded) {\n            this.setState({\n                BottomNavClasses: \"bottom-nav not-expanded\",\n                BottomNavExpanded: false\n            })\n        } else {\n            this.setState({\n                BottomNavClasses: \"bottom-nav expanded\",\n                BottomNavExpanded: true\n            })\n        }\n    };\n    \n    endTimer = () => {\n    }\n\n    updateMembers = (data, callback) => {\n        console.log(\"update members triggered\")\n\n        let members = []\n\n        if (data.model) {\n            members = data.model[0].members\n        }\n\n        else if (data.data) {\n            members = data.data[0].members\n        }\n\n        console.log(members)\n        const bottomNavArray = []\n        const playerList = []\n        const totalPlayerList = []\n        let count = 1\n\n        for (var i = 0; i < members.length; i ++) {\n\n            totalPlayerList.push(members[i])\n\n            if (members[i].ip === this.state.socketAddress) {\n                this.setState({userName: members[i].name})\n                this.setState({userScore: members[i].score})\n                this.setState({userColor: members[i].color})\n                this.setState({userJudge: members[i].judge})\n            }\n            \n            else {\n                bottomNavArray.push(members[i])\n            }\n\n            if (this.state.pendingPlayerHeader === \"Players logged in\") {\n                playerList.push(members[i])\n            }\n\n            else {\n                if (members[i].judge === false) {\n                    playerList.push(members[i])\n                }\n            }\n\n            if (members[i].judge) {\n                this.setState({currentJudge: members[i].name})\n            }\n\n            if (count === members.length) {\n                this.setState({allPlayers: totalPlayerList})\n                this.setState({playerList: playerList})\n                this.setState({BottomNavPlayerList: bottomNavArray})\n            }\n\n            count ++ \n        }\n        callback()\n    }\n\n    render() {\n        return (\n            <div className=\"home-container\"> \n\n                { this.state.showProfile ? \n                    <Profile url={this.state.urlString} ip={this.state.socketAddress} memberArray={this.state.playerList} socket={this.state.socket} userAdded={this.updateMembers} profileAdded={this.componentChange.bind(this)}/>\n                : null}\n\n                { this.state.showPending ?\n                    <div>\n                        <LoadingScreen url={this.state.urlString} judge={this.state.currentJudge} socket={this.state.socket}\n                            keyword = {this.state.keyword}\n                            pendingMessage= {this.state.pendingMessage}\n                            pendingPlayerHeader = {this.state.pendingPlayerHeader}\n                            userName= {this.state.userName}\n                            userColor={this.state.userColor}\n                            userScore={this.state.userScore}\n                            userJudge={this.state.userJudge}\n                            members={this.state.playerList}\n                            category={this.state.selectedCategory}\n                            theme={this.state.selectedTheme}\n                            showChoices={this.state.showJudgeChoices}\n                        />\n\n                        { this.state.showTimer ? \n                            <Timer outOfTime={this.componentChange.bind(this)} />\n                        : null}\n                        \n                        <BottomNav expand={() => { this.expandToggle() }} class={this.state.BottomNavClasses}>\n                            <PlayerListHolder>\n                                <CurrentPlayer playerName={this.state.userName} playerScore={this.state.userScore}\n                                        userColor={this.state.userColor} />\n                                {this.state.BottomNavPlayerList.map(\n                                    player => (\n                                        <PlayerList\n                                        key={player.ip}\n                                        id={player.ip}\n                                        playerName={player.name} \n                                        playerScore={player.score}\n                                        userColor={player.color}\n                                        />\n                                    ))\n                                }\n                            </PlayerListHolder>\n                        </BottomNav>    \n                    </div>\n                : null}\n\n                {this.state.showJudgeCategory ?\n                    <div>\n                        <div className=\"prompt-select-pg\">\n                            <p className=\"judge-instructions\">Select a Theme</p>\n                            {this.state.themeIndex.map(prompt => (\n                                <PromptSelect\n                                key={prompt.index}\n                                index={prompt.index}\n                                icon={prompt.icon}\n                                theme={prompt.theme}\n                                color={prompt.color}\n                                categories={prompt.categories}\n                                socket={this.state.socket} />\n                            ))}\n                        </div>\n                        <BottomNav expand={() => { this.expandToggle() }} class={this.state.BottomNavClasses}>\n                            <PlayerListHolder>\n                                <CurrentPlayer playerName={this.state.userName} playerScore={this.state.userScore}\n                                userColor={this.state.userColor} />\n                                {this.state.BottomNavPlayerList.map(\n                                    player => (\n                                        <PlayerList\n                                        key={player.ip}\n                                        id={player.ip}\n                                        playerName={player.name} playerScore={player.score}\n                                        userColor={player.color}\n                                        />\n                                    ))\n                                }\n                            </PlayerListHolder>\n                        </BottomNav> \n                    </div>\n                : null }\n\n                { this.state.showGiphySearch ?\n                    <div> \n                        <GiphySearch theme={this.state.selectedTheme} category={this.state.selectedCategory} socket={this.state.socket} \n                        userSocket={sessionStorage.getItem(\"username\")} judge={this.state.currentJudge}\n                        timer={this.state.outOfTime} outOfTime={this.componentChange.bind(this)} >\n                            <Timer outOfTime={this.componentChange.bind(this)} />\n                        </GiphySearch>\n\n                        <BottomNav expand={() => { this.expandToggle() }} class={this.state.BottomNavClasses}>\n                            <PlayerListHolder>\n                                <CurrentPlayer playerName={this.state.userName} playerScore={this.state.userScore}\n                                userColor={this.state.userColor} />\n                                {this.state.BottomNavPlayerList.map(\n                                    player => (\n                                        <PlayerList\n                                        key={player.ip}\n                                        id={player.ip}\n                                        playerName={player.name} playerScore={player.score}\n                                        userColor={player.color}\n                                        />\n                                    ))\n                                }\n                            </PlayerListHolder>\n                        </BottomNav> \n                    </div>\n                : null}\n\n                { this.state.showGifReveal ? \n                    <GifReveal\n                        theme={this.state.selectedTheme} category={this.state.selectedCategory} gifsReturned={this.state.gifsReturned} \n                        users={this.state.allPlayers} userSocket = {sessionStorage.getItem(\"username\")}\n                        socket={this.state.socket}\n                    />\n                : null}\n\n                { this.state.showWinner ? \n                    <div>\n                        <WinnerPage\n                            winner={this.state.winner} theme={this.state.selectedTheme} category={this.state.selectedCategory} \n                            judge={this.state.currentJudge} userJudge={this.state.userJudge}\n                            socket={this.state.socket}\n                        />\n\n                        <BottomNav expand={() => { this.expandToggle() }} class={this.state.BottomNavClasses}>\n                            <PlayerListHolder>\n                                <CurrentPlayer playerName={this.state.userName} playerScore={this.state.userScore}\n                                userColor={this.state.userColor} />\n                                {this.state.BottomNavPlayerList.map(\n                                    player => (\n                                        <PlayerList\n                                        key={player.ip}\n                                        id={player.ip}\n                                        playerName={player.name} playerScore={player.score}\n                                        userColor={player.color}\n                                        />\n                                    ))\n                                }\n                            </PlayerListHolder>\n                        </BottomNav> \n                    </div>\n                : null}\n\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport \"./style/buttons.css\";\n\nclass BackBtn extends Component {\n\n  backFunction = () => {\n    console.log(\"back-it-up button has been clicked\")\n    window.location.href = \"/\"\n  }\n\n  render() {\n    return(\n      <span className=\"btn back-btn\" onClick = {this.backFunction}>\n        Home\n      </span>\n    )\n  }\n\n}\n\nexport default BackBtn;","import React, { Component } from \"react\";\nimport BackBtn from \"../../components/Buttons/backButton\";\nimport \"./style/noMatch.css\";\n\nclass NoMatch extends Component {\n\n    backFunction = () => {\n        window.location.href=\"/\";\n    }\n\n    render() {\n        return (\n            <div>\n                <p id=\"not-a-session\">This is not a valid session. Please enter a room key, or create a new game.</p>\n                <BackBtn onClick={this.backFunction}></BackBtn>\n            </div>\n\n        );\n    }\n}\n\nexport default NoMatch;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport NoMatch from \"./pages/NoMatch\";\n\nconst App = () => \n(\n  <Router>\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/game/:word1/:word2/:word3/:word4/:word5/:word6\" component={Home} />\n        <Route component={NoMatch} />\n      </Switch>\n    </div>\n  </Router>\n);\nexport default App;\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./stylesheets/main.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}